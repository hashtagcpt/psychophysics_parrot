function zpath( cmd, name )% zpath  Path archive function%% Usage: zpath cmd name%% Instructions: % Set a path using matlab's Set Path command from the% file menu, hit close (do not save). Then run "zpath save <name>". You% will then be able to load that path during another session with the% command "zpath <name>". %% On the first run of zpath, or if paths.mat can not be found on the % default path the user will be prompted for a location to save paths.mat%% Full command list:%% zpath ls%	list pathnames [default with no arguments]%% zpath save <pathname>%	save <pathname> to paths.mat%% zpath [ set ] <pathname>%	set <pathname> to current path%% zpath ls%	list pathnames%% zpath rm <pathname>%	remove <pathname> from paths.mat%% zpath where %   displays location of paths.mat file%% zpath edit%   brings up the setpath display dialog    %% zpath create%   create a new paths.mat    %% If paths.mat does not exist on the path (preferrably it ought to be in the same dir as zpath.m) % zpath will ask if it should be created.if nargin == 0	cmd = 'ls';end% handle abbreviated syntaxif nargin==1 & ~strcmp(cmd,'ls') && ~strcmp(cmd,'where') && ~strcmp(cmd,'create') 	name=cmd;	cmd='set';end%handle case for first/run non-existant paths.matif ~exist('paths.mat', 'file')    answer = input('\n\nFile paths.mat not found - create? (y/n)? ','s');    if strcmp(lower(answer),'y')        answer = input('\n\nPlease input a location for paths.mat to be stored.\n The directory input should be on the startup path. \n The current path will be called ''default''\n\n Press [return] to continue...','s');                name = 'default';        eval([ name '= path;' ]);        cd(answer);	   save paths.mat    elseif strcmp(lower(answer),'n')           error('FATAL: paths.mat file not found');    end    return;end          % execute appropriate commandswitch lower(cmd)    % remove a stored path     case 'rm'        pm = which('paths.mat');		if strcmp(name,'default')			error('The default path cannot be removed.');		end		pathsList = load('paths.mat')        clear pm        pm = which('paths.mat');        		eval(sprintf('clear %s',name));		clear cmd name		eval(sprintf('save %s', pm));		return;	% load a stored path	case 'set',		success = 0;        load('paths.mat');	          path(eval(name));        success = 1;        fprintf('Path set to shorthand %s.\n', name)		if ~success			error(sprintf('FATAL: Path shorthand ''%s'' not found\n', name));		end	% save current path	case 'save',		eval([ name '=path;' ]);		save('paths.mat',name, '-append');	case 'ls'		fprintf('\nPathnames found:\n\n');			s=whos('-file','paths.mat');			for tmpCtr = 1:size(s)                if ~strcmp('pm',s(tmpCtr).name)                     fprintf('%s\n', s(tmpCtr).name);                end			end			fprintf('\n');    % paths.mat where are you?            case 'where'        which('paths.mat')    case 'create'            answer = input('\n\nWARNING: Creating a new paths.mat will overwrite the previous one. \n Are you certain? (y/n)? ','s');        if strcmp(lower(answer),'y')            answer = input('Please select a path in the following dialog box and hit close.\n The path selected in the dialog with then become the default path for the new paths.mat file. \n Press [return] to continue...','s');        %            eval([ name '= path;' ]);            pm = which('paths.mat');            cd(pm(1:(end-length('paths.mat'))));            name = 'default';            uisave('default','paths.mat');        end	otherwise			error(sprintf('Unknown command parameter ''%s''',cmd));    endreturn;